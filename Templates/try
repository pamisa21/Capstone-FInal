{% extends "layout/base.html" %}

{% block css %}
<link rel="stylesheet" href="{{ url_for('static', filename='css/variable.css') }}">
<link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}">
<link rel="stylesheet" href="{{ url_for('static', filename='css/output.css') }}">
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
{% endblock css %}

{% block content %}
<div class="flex flex-col h-screen">
    <header>
        {% include "includes/navbar.html" %}
    </header>
    
    <div class="flex flex-1">
        {% include "includes/sidebar.html" %}

        <main class="flex-1 p-5 mx-5 mt-20 ml-2 md:ml-60">
            <div id="dashboard" class="p-6">
                <!-- Dashboard Header with Filter Section -->
                <div class="flex flex-col md:flex-row justify-between items-center mb-6">
                    <h1 class="text-2xl font-bold">Dashboard</h1>
                    <button class="border border-gray-300 rounded-md px-4 py-2 text-sm bg-white text-black shadow-lg transition-all duration-300 transform hover:bg-green-100 hover:shadow-2xl focus:outline-none">
                        Print Results
                    </button>
                </div>

                <div class="flex flex-wrap items-center gap-4 mt-4 md:mt-0 mb-10 ">
                    <div class="flex flex-col">
                        <select id="dashboardSemesterDropdown" class="border rounded-md px-4 py-2 text-sm w-full shadow-lg bg-white text-black">
                            {% for semester in semesters %}
                                <option value="{{ semester.ay_id }}" {% if semester.ay_id == default_semester %} selected {% endif %}>
                                    {{ semester.ay_name }}
                                </option>
                            {% endfor %}
                        </select>
                    </div>

                    <script>
                        document.addEventListener("DOMContentLoaded", function() {
                            const dashboardDropdown = document.getElementById("dashboardSemesterDropdown");
                            const savedSemester = localStorage.getItem("selectedSemester");

                            // Load last selected semester if available
                            if (savedSemester) {
                                dashboardDropdown.value = savedSemester;
                            }

                            // Save selected semester to localStorage and refresh the page on change
                            dashboardDropdown.addEventListener("change", function() {
                                localStorage.setItem("selectedSemester", dashboardDropdown.value);
                                window.location.href = `/dashboard?ay_id=${dashboardDropdown.value}`; // Reload with ay_id
                            });
                        });
                    </script>

                    <div class="flex flex-wrap items-center gap-4 mt-4 md:mt-0 ">
                        <div class="flex items-center">
                            <select id="filterCollege" class="border rounded-md px-4 py-2 text-sm w-full shadow-lg transition-all duration-300 transform hover:shadow-2xl focus:outline-none bg-white text-black" onchange="updateDashboard()">
                                <option value="">Select College</option>
                                {% for college in colleges %}
                                    <option value="{{ college.college_id }}" {% if college.college_id == selected_college %}selected{% endif %}>{{ college.college_name }}</option>
                                {% endfor %}
                            </select>
                        </div>
                        <!-- Other filters like department and faculty -->
                    </div>

                    <script>
                        function updateDashboard() {
                            const collegeSelect = document.getElementById('filterCollege');
                            const selectedCollegeId = collegeSelect.value;
                            const selectedSemester = document.getElementById("dashboardSemesterDropdown").value;
                            
                            // Redirect to dashboard with selected college and semester
                            window.location.href = `/dashboard?college_id=${selectedCollegeId}&ay_id=${selectedSemester}`;
                        }
                    </script>

                    
                    <div class="flex items-center">
                        <select id="filterDepartment" class="border rounded-md px-4 py-2 text-sm w-full shadow-lg transition-all duration-300 transform hover:shadow-2xl focus:outline-none bg-white text-black hidden">
                            <option value="">Select Department</option>
                        </select>
                    </div>

                    <div class="flex items-center">
                        <select id="filterFaculty" class="border rounded-md px-4 py-2 text-sm w-full shadow-lg transition-all duration-300 transform hover:shadow-2xl focus:outline-none bg-white text-black hidden">
                            <option value="">Select Faculty</option>
                        </select>
                    </div>

                    <script>
                        // Departments and faculties data from backend
                        const departmentsByCollege = {{ departments_by_college | tojson }};
                        const facultiesByDepartment = {{ faculties_by_department | tojson }};
                    
                        function updateDepartments() {
                            const collegeSelect = document.getElementById('filterCollege');
                            const departmentSelect = document.getElementById('filterDepartment');
                            const selectedCollegeId = collegeSelect.value;
                    
                            departmentSelect.innerHTML = '<option value="">Select Department</option>';
                    
                            if (selectedCollegeId && departmentsByCollege[selectedCollegeId]) {
                                departmentsByCollege[selectedCollegeId].forEach(department => {
                                    const option = document.createElement('option');
                                    option.value = department.department_id;
                                    option.textContent = department.department_name;
                                    departmentSelect.appendChild(option);
                                });
                                departmentSelect.classList.remove('hidden');
                            } else {
                                departmentSelect.classList.add('hidden');
                            }

                            // Reset faculty dropdown
                            document.getElementById('filterFaculty').classList.add('hidden');
                        }
                    
                        function updateFaculties() {
                            const departmentSelect = document.getElementById('filterDepartment');
                            const facultySelect = document.getElementById('filterFaculty');
                            const selectedDepartmentId = departmentSelect.value;
                    
                            facultySelect.innerHTML = '<option value="">Select Faculty</option>';
                    
                            if (selectedDepartmentId && facultiesByDepartment[selectedDepartmentId]) {
                                facultiesByDepartment[selectedDepartmentId].forEach(faculty => {
                                    const option = document.createElement('option');
                                    option.value = faculty.faculty_id;
                                    option.textContent = faculty.faculty_name;
                                    facultySelect.appendChild(option);
                                });
                                facultySelect.classList.remove('hidden');
                            } else {
                                facultySelect.classList.add('hidden');
                            }
                        }

                        // Add event listeners for dropdown changes
                        document.getElementById('filterCollege').addEventListener('change', updateDepartments);
                        document.getElementById('filterDepartment').addEventListener('change', updateFaculties);
                    </script>
                </div>

                <!-- Total Comments and Sentiment Count Row -->
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
                    <!-- Total Comments Card -->
                    <div class="bg-white rounded-lg shadow-md p-8 flex flex-col relative col-span-1 md:col-span-2">
                        <h2 class="text-lg font-semibold">Total Comments</h2>
                        <h4 class="text-3xl font-bold text-center">{{ total_comments }} <span class="ml-2 text-sm">Comments</span></h4>
                        <a href="/comments" class="text-sm absolute top-0 right-0 mt-4 mr-2">View Comments!</a>
                    </div>

                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 col-span-1 md:col-span-2">
                        <div class="bg-green-100 rounded-lg shadow-md p-6 flex flex-col items-center">
                            <span class="material-icons primary">thumb_up</span>
                            <h3 class="text-xl font-semibold mt-2">Positive</h3>
                            <p class="text-3xl font-bold">{{ positive_count }}</p>
                        </div>

                        <div class="bg-gray-100 rounded-lg shadow-md p-6 flex flex-col items-center">
                            <span class="material-icons primary">more_horiz</span>
                            <h3 class="text-xl font-semibold mt-2">Neutral</h3>
                            <p class="text-3xl font-bold">{{ neutral_count }}</p>
                        </div>

                        <div class="bg-red-100 rounded-lg shadow-md p-6 flex flex-col items-center">
                            <span class="material-icons text-red-500">thumb_down</span>
                            <h3 class="text-xl font-semibold mt-2">Negative</h3>
                            <p class="text-3xl font-bold">{{ negative_count }}</p>
                        </div>
                    </div>
                </div>

                <!-- Sentiment Analysis Card (Percentage) -->
                <div class="bg-white rounded-lg shadow-md mb-5 p-8 flex flex-col md:flex-row mt-6">
                    <div class="flex-grow">
                        <h2 class="text-lg font-semibold mb-4">Sentiment Analysis</h2>
                        
                        <!-- Positive Sentiment -->
                        <div class="flex items-center justify-between mb-2">
                            <div class="flex items-center">
                                <span class="material-icons text-green-500">thumb_up</span>
                                <span class="ml-2">Positive</span>
                            </div>
                            <p class="text-3xl font-bold">{{ (positive_count / total_comments * 100) | round(2) if total_comments > 0 else 0 }}%</p>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full mt-2">
                            <div class="bg-green-500 h-2 rounded-full" style="width: {{ (positive_count / total_comments * 100) | round(2) if total_comments > 0 else 0 }}%;"></div>
                        </div>

                        <!-- Neutral Sentiment -->
                        <div class="flex items-center justify-between mb-2 mt-4">
                            <div class="flex items-center">
                                <span class="material-icons text-gray-500">more_horiz</span>
                                <span class="ml-2">Neutral</span>
                            </div>
                            <p class="text-3xl font-bold">{{ (neutral_count / total_comments * 100) | round(2) if total_comments > 0 else 0 }}%</p>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full mt-2">
                            <div class="bg-gray-400 h-2 rounded-full" style="width: {{ (neutral_count / total_comments * 100) | round(2) if total_comments > 0 else 0 }}%;"></div>
                        </div>

                        <!-- Negative Sentiment -->
                        <div class="flex items-center justify-between mb-2 mt-4">
                            <div class="flex items-center">
                                <span class="material-icons text-red-500">thumb_down</span>
                                <span class="ml-2">Negative</span>
                            </div>
                            <p class="text-3xl font-bold">{{ (negative_count / total_comments * 100) | round(2) if total_comments > 0 else 0 }}%</p>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full mt-2">
                            <div class="bg-red-500 h-2 rounded-full" style="width: {{ (negative_count / total_comments * 100) | round(2) if total_comments > 0 else 0 }}%;"></div>
                        </div>
                    </div>
                </div>

                <!-- Comment List -->
                <div class="bg-white rounded-lg shadow-md p-5">
                    <h2 class="text-lg font-semibold mb-4">Comments List</h2>
                    <table class="min-w-full bg-white">
                        <thead>
                            <tr>
                                <th class="py-2 px-4 border-b">Comment</th>
                                <th class="py-2 px-4 border-b">Sentiment</th>
                                <th class="py-2 px-4 border-b">Date Added</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for comment in comments %}
                            <tr>
                                <td class="py-2 px-4 border-b">{{ comment.comment_text }}</td>
                                <td class="py-2 px-4 border-b">{{ comment.sentiment }}</td>
                                <td class="py-2 px-4 border-b">{{ comment.date_added.strftime('%Y-%m-%d') }}</td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </main>
    </div>
</div>
{% endblock content %}






















{% extends "layout/base.html" %}

{% block css %}
<link rel="stylesheet" href="{{ url_for('static', filename='css/variable.css') }}">
<link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}">
<link rel="stylesheet" href="{{ url_for('static', filename='css/output.css') }}">
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
{% endblock css %}

{% block content %}
<div class="flex flex-col h-screen">
    <header>
        {% include "includes/navbar.html" %}
    </header>
    
    <div class="flex flex-1">
        {% include "includes/sidebar.html" %}

        <main class="flex-1 p-5 mx-5 mt-20 ml-2 md:ml-60">
            <div id="dashboard" class="p-6">
                <!-- Dashboard Header with Filter Section -->
                <div class="flex flex-col md:flex-row justify-between items-center mb-2">
                    <h1 class="text-2xl font-bold">Dashboard</h1>
                    <button class="border border-gray-300 rounded-md px-4 py-2 text-sm bg-white text-black shadow-lg transition-all duration-300 transform hover:bg-green-100 hover:shadow-2xl focus:outline-none">
                        Print Results
                    </button>
                </div>

                <div class="flex flex-wrap items-center gap-4 mt-2 md:mt-0 mb-3">
                    <!-- Semester Dropdown -->
                    <div class="flex flex-col">
                        <select id="dashboardSemesterDropdown" class="border rounded-md px-4 py-2 text-sm w-full shadow-lg bg-white text-black">
                            {% for semester in semesters %}
                                <option value="{{ semester.ay_id }}" {% if semester.ay_id == default_semester %} selected {% endif %}>
                                    {{ semester.ay_name }}
                                </option>
                            {% endfor %}
                        </select>
                    </div>
                
                    <!-- College Dropdown -->
                    <div class="flex items-center">
                        <select id="filterCollege" class="border rounded-md px-4 py-2 text-sm w-full shadow-lg bg-white text-black" onchange="updateDropdowns()">
                            <option value="">Select College</option>
                            {% for college in colleges %}
                                <option value="{{ college.college_id }}" {% if college.college_id == selected_college %}selected{% endif %}>
                                    {{ college.college_name }}
                                </option>
                            {% endfor %}
                        </select>
                    </div>
                
                    <!-- Department Dropdown -->
                    <div class="flex items-center">
                        <select id="filterDepartment" class="border rounded-md px-4 py-2 text-sm w-full shadow-lg bg-white text-black hidden" onchange="updateFacultyDropdown()">
                            <option value="">Select Department</option>
                        </select>
                    </div>
                
                    <!-- Faculty Dropdown -->
                    <div class="flex items-center">
                        <select id="filterFaculty" class="border rounded-md px-4 py-2 text-sm w-full shadow-lg bg-white text-black hidden">
                            <option value="">Select Faculty</option>
                        </select>
                    </div>
                </div>
                
                <script>
                    document.addEventListener("DOMContentLoaded", function() {
                        const dashboardDropdown = document.getElementById("dashboardSemesterDropdown");
                        const savedSemester = localStorage.getItem("selectedSemester");
                
                        // Load last selected semester if available
                        if (savedSemester) {
                            dashboardDropdown.value = savedSemester;
                        }
                
                        // Save selected semester to localStorage and refresh the page on change
                        dashboardDropdown.addEventListener("change", function() {
                            localStorage.setItem("selectedSemester", dashboardDropdown.value);
                            window.location.href = `/dashboard?ay_id=${dashboardDropdown.value}`;
                        });
                
                        // Initialize dropdowns with saved values or default
                        updateDropdowns();
                    });
                
                    function updateDropdowns() {
                        const collegeSelect = document.getElementById('filterCollege');
                        const departmentSelect = document.getElementById('filterDepartment');
                        const facultySelect = document.getElementById('filterFaculty');
                        const selectedCollegeId = collegeSelect.value;
                
                        departmentSelect.innerHTML = '<option value="">Select Department</option>';
                        facultySelect.innerHTML = '<option value="">Select Faculty</option>';
                
                        // Populate department dropdown based on selected college
                        {% for department in all_departments %}
                            if (selectedCollegeId === "{{ department.college_id }}") {
                                const option = document.createElement("option");
                                option.value = "{{ department.department_id }}";
                                option.textContent = "{{ department.department_name }}";
                                departmentSelect.appendChild(option);
                            }
                        {% endfor %}
                
                        // Toggle visibility of department dropdown
                        departmentSelect.classList.toggle('hidden', selectedCollegeId === "");
                
                        // Clear and hide faculty dropdown until a department is selected
                        facultySelect.classList.add('hidden');
                    }
                
                    function updateFacultyDropdown() {
                        const departmentSelect = document.getElementById('filterDepartment');
                        const facultySelect = document.getElementById('filterFaculty');
                        const selectedDepartmentId = departmentSelect.value;
                
                        facultySelect.innerHTML = '<option value="">Select Faculty</option>';
                
                        // Populate faculty dropdown based on selected department
                        {% for department_id, faculties in faculties_by_department.items() %}
                            if (selectedDepartmentId === "{{ department_id }}") {
                                {% for faculty in faculties %}
                                    const option = document.createElement("option");
                                    option.value = "{{ faculty.faculty_id }}";
                                    option.textContent = "{{ faculty.faculty_name }}";
                                    facultySelect.appendChild(option);
                                {% endfor %}
                            }
                        {% endfor %}
                
                        // Show faculty dropdown if there are faculties in the selected department
                        facultySelect.classList.toggle('hidden', selectedDepartmentId === "");
                    }
                </script>
                

                <!-- Total Comments and Sentiment Count Row -->
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
                    <!-- Total Comments Card -->
                    <div class="bg-white rounded-lg shadow-md p-8 flex flex-col relative col-span-1 md:col-span-2">
                        <h2 class="text-lg font-semibold">Total Comments</h2>
                        <h4 class="text-3xl font-bold text-center">{{ total_comments }} <span class="ml-2 text-sm">Comments</span></h4>
                        <a href="/comments" class="text-sm absolute top-0 right-0 mt-4 mr-2">View Comments!</a>
                    </div>

                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 col-span-1 md:col-span-2">
                        <div class="bg-green-100 rounded-lg shadow-md p-6 flex flex-col items-center">
                            <span class="material-icons primary">thumb_up</span>
                            <h3 class="text-xl font-semibold mt-2">Positive</h3>
                            <p class="text-3xl font-bold">{{ positive_count }}</p>
                        </div>

                        <div class="bg-gray-100 rounded-lg shadow-md p-6 flex flex-col items-center">
                            <span class="material-icons primary">more_horiz</span>
                            <h3 class="text-xl font-semibold mt-2">Neutral</h3>
                            <p class="text-3xl font-bold">{{ neutral_count }}</p>
                        </div>

                        <div class="bg-red-100 rounded-lg shadow-md p-6 flex flex-col items-center">
                            <span class="material-icons text-red-500">thumb_down</span>
                            <h3 class="text-xl font-semibold mt-2">Negative</h3>
                            <p class="text-3xl font-bold">{{ negative_count }}</p>
                        </div>
                    </div>
                </div>

                <!-- Sentiment Analysis Card (Percentage) -->
                <div class="bg-white rounded-lg shadow-md mb-5 p-8 flex flex-col md:flex-row mt-6">
                    <div class="flex-grow">
                        <h2 class="text-lg font-semibold mb-4">Sentiment Analysis</h2>
                        
                        <!-- Positive Sentiment -->
                        <div class="flex items-center justify-between mb-2">
                            <div class="flex items-center">
                                <span class="material-icons text-green-500">thumb_up</span>
                                <span class="ml-2">Positive</span>
                            </div>
                            <p class="text-3xl font-bold">{{ (positive_count / total_comments * 100) | round(2) if total_comments > 0 else 0 }}%</p>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full mt-2">
                            <div class="bg-green-500 h-2 rounded-full" style="width: {{ (positive_count / total_comments * 100) | round(2) if total_comments > 0 else 0 }}%;"></div>
                        </div>

                        <!-- Neutral Sentiment -->
                        <div class="flex items-center justify-between mb-2 mt-4">
                            <div class="flex items-center">
                                <span class="material-icons text-gray-500">more_horiz</span>
                                <span class="ml-2">Neutral</span>
                            </div>
                            <p class="text-3xl font-bold">{{ (neutral_count / total_comments * 100) | round(2) if total_comments > 0 else 0 }}%</p>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full mt-2">
                            <div class="bg-gray-400 h-2 rounded-full" style="width: {{ (neutral_count / total_comments * 100) | round(2) if total_comments > 0 else 0 }}%;"></div>
                        </div>

                        <!-- Negative Sentiment -->
                        <div class="flex items-center justify-between mb-2 mt-4">
                            <div class="flex items-center">
                                <span class="material-icons text-red-500">thumb_down</span>
                                <span class="ml-2">Negative</span>
                            </div>
                            <p class="text-3xl font-bold">{{ (negative_count / total_comments * 100) | round(2) if total_comments > 0 else 0 }}%</p>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full mt-2">
                            <div class="bg-red-500 h-2 rounded-full" style="width: {{ (negative_count / total_comments * 100) | round(2) if total_comments > 0 else 0 }}%;"></div>
                        </div>
                    </div>
                </div>


     

            
            </div>
        </main>
    </div>
</div>
{% endblock content %}
